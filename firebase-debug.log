[debug] [2025-10-05T16:32:08.798Z] ----------------------------------------------------------------------
[debug] [2025-10-05T16:32:08.804Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\peorr\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2025-10-05T16:32:08.804Z] CLI Version:   14.17.0
[debug] [2025-10-05T16:32:08.804Z] Platform:      win32
[debug] [2025-10-05T16:32:08.805Z] Node Version:  v22.13.1
[debug] [2025-10-05T16:32:08.805Z] Time:          Sun Oct 05 2025 18:32:08 GMT+0200 (hora de verano de Europa central)
[debug] [2025-10-05T16:32:08.805Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-10-05T16:32:08.809Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-10-05T16:32:08.901Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-10-05T16:32:08.902Z] > authorizing via signed-in user (peorrr9@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\peorr\Desktop\InkLink\inklink

[debug] [2025-10-05T16:32:09.305Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-10-05T16:32:09.305Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2025-10-05T16:32:41.883Z] Using project from CLI flag: inklink-433c3
[debug] [2025-10-05T16:32:41.885Z] Checked if tokens are valid: false, expires at: 1759106643898
[debug] [2025-10-05T16:32:41.886Z] Checked if tokens are valid: false, expires at: 1759106643898
[debug] [2025-10-05T16:32:41.886Z] > refreshing access token with scopes: []
[debug] [2025-10-05T16:32:41.888Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2025-10-05T16:32:41.888Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-10-05T16:32:42.111Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2025-10-05T16:32:42.111Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-10-05T16:32:42.123Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/inklink-433c3 [none]
[debug] [2025-10-05T16:32:42.515Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/inklink-433c3 200
[debug] [2025-10-05T16:32:42.516Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/inklink-433c3 {"projectId":"inklink-433c3","projectNumber":"204651333006","displayName":"InkLink","name":"projects/inklink-433c3","resources":{"hostingSite":"inklink-433c3"},"state":"ACTIVE","etag":"1_54bb9b1f-ad70-42f0-8158-57e29d205c21"}
[info] i  Using project inklink-433c3 (InkLink) 
[info] 
=== Firestore Setup
[info] i  firestore: ensuring required API firestore.googleapis.com is enabled... 
[debug] [2025-10-05T16:32:42.712Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:42.712Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:42.712Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases [none]
[debug] [2025-10-05T16:32:43.348Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases 200
[debug] [2025-10-05T16:32:43.349Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases {"databases":[{"name":"projects/inklink-433c3/databases/(default)","uid":"50004c30-d07e-40f3-a32e-8798fdd72472","createTime":"2025-02-10T19:42:36.324615Z","updateTime":"2025-02-10T19:42:36.324615Z","locationId":"eur3","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"3600s","earliestVersionTime":"2025-10-05T15:32:43.403986Z","appEngineIntegrationMode":"DISABLED","keyPrefix":"e","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_DISABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","databaseEdition":"STANDARD","freeTier":true,"realtimeUpdatesMode":"REALTIME_UPDATES_ENABLED","etag":"IIW7zZK+jZADMPO43fawhpAD"}]}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2025-10-05T16:32:46.134Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:46.135Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:46.136Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/inklink-433c3/releases pageSize=10&pageToken=
[debug] [2025-10-05T16:32:47.208Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/inklink-433c3/releases 200
[debug] [2025-10-05T16:32:47.209Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/inklink-433c3/releases {"releases":[{"name":"projects/inklink-433c3/releases/cloud.firestore","rulesetName":"projects/inklink-433c3/rulesets/9312494c-c176-4d24-b704-110038881f13","createTime":"2025-02-10T19:42:42.382294Z","updateTime":"2025-09-28T23:46:58.228323Z"}]}
[debug] [2025-10-05T16:32:47.210Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:47.211Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:47.211Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/inklink-433c3/rulesets/9312494c-c176-4d24-b704-110038881f13 [none]
[debug] [2025-10-05T16:32:48.088Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/inklink-433c3/rulesets/9312494c-c176-4d24-b704-110038881f13 200
[debug] [2025-10-05T16:32:48.088Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/inklink-433c3/rulesets/9312494c-c176-4d24-b704-110038881f13 [omitted]
[info] i  Downloaded the existing Firestore Security Rules from the Firebase console 
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2025-10-05T16:32:48.098Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:48.098Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:48.099Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:48.100Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:48.100Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases/(default)/collectionGroups/-/indexes [none]
[debug] [2025-10-05T16:32:48.101Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false OR ttlConfig:* [none]
[debug] [2025-10-05T16:32:48.255Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases/(default)/collectionGroups/-/indexes 200
[debug] [2025-10-05T16:32:48.255Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases/(default)/collectionGroups/-/indexes {}
[debug] [2025-10-05T16:32:48.353Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false OR ttlConfig:* 200
[debug] [2025-10-05T16:32:48.353Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/inklink-433c3/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false OR ttlConfig:* {"fields":[{"name":"projects/inklink-433c3/databases/(default)/collectionGroups/__default__/fields/*","indexConfig":{"indexes":[{"queryScope":"COLLECTION","fields":[{"fieldPath":"*","order":"ASCENDING"}],"state":"READY"},{"queryScope":"COLLECTION","fields":[{"fieldPath":"*","order":"DESCENDING"}],"state":"READY"},{"queryScope":"COLLECTION","fields":[{"fieldPath":"*","arrayConfig":"CONTAINS"}],"state":"READY"}]}}]}
[info] i  Downloaded the existing Firestore indexes from the Firebase console 
[info] +  Wrote firestore.rules 
[info] +  Wrote firestore.indexes.json 
[info] 
=== Functions Setup
[debug] [2025-10-05T16:32:48.517Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-10-05T16:32:48.517Z] > authorizing via signed-in user (peorrr9@gmail.com)
[debug] [2025-10-05T16:32:48.518Z] [iam] checking project inklink-433c3 for permissions ["firebase.projects.get"]
[debug] [2025-10-05T16:32:48.518Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:48.518Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:32:48.518Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/inklink-433c3:testIamPermissions [none]
[debug] [2025-10-05T16:32:48.518Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/inklink-433c3:testIamPermissions x-goog-quota-user=projects/inklink-433c3
[debug] [2025-10-05T16:32:48.518Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/inklink-433c3:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-10-05T16:32:49.259Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/inklink-433c3:testIamPermissions 200
[debug] [2025-10-05T16:32:49.259Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/inklink-433c3:testIamPermissions {"permissions":["firebase.projects.get"]}
[info] Let's create a new codebase for your functions.
[info] A directory corresponding to the codebase will be created in your project
[info] with sample code pre-configured.

[info] See https://firebase.google.com/docs/functions/organize-functions for
[info] more information on organizing your functions using codebases.

[info] Functions can be deployed with firebase deploy.

[info] +  Wrote functions/package.json 
[info] +  Wrote functions/.eslintrc.js 
[info] +  Wrote functions/index.js 
[info] +  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[debug] [2025-10-05T16:33:39.436Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:33:39.436Z] Checked if tokens are valid: true, expires at: 1759685561111
[debug] [2025-10-05T16:33:39.436Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/inklink-433c3 [none]
[debug] [2025-10-05T16:33:39.751Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/inklink-433c3 200
[debug] [2025-10-05T16:33:39.751Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/inklink-433c3 {"projectId":"inklink-433c3","projectNumber":"204651333006","displayName":"InkLink","name":"projects/inklink-433c3","resources":{"hostingSite":"inklink-433c3"},"state":"ACTIVE","etag":"1_54bb9b1f-ad70-42f0-8158-57e29d205c21"}
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
